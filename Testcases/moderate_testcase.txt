+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Stack operations - Moderate
// Testing multiple push operations
PUSH 10
PUSH 20
PUSH 30
PEEK_STACK
IS_STACK_EMPTY
IS_STACK_FULL
STACK_SIZE
LIST_STACK_ELEMENTS
// Testing multiple pop operations
POP
PEEK_STACK
POP
STACK_SIZE
LIST_STACK_ELEMENTS
POP
IS_STACK_EMPTY
LIST_STACK_ELEMENTS
// Testing push after empty
PUSH 40
PEEK_STACK
IS_STACK_EMPTY
STACK_SIZE
LIST_STACK_ELEMENTS
POP
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Circular Queue operations - Moderate
// Testing multiple enqueue operations
ENQUEUE 5
ENQUEUE 15
ENQUEUE 25
PEEK_QUEUE
IS_QUEUE_EMPTY
IS_QUEUE_FULL
QUEUE_SIZE
LIST_QUEUE_ELEMENTS
// Testing multiple dequeue operations
DEQUEUE
PEEK_QUEUE
DEQUEUE
QUEUE_SIZE
LIST_QUEUE_ELEMENTS
DEQUEUE
IS_QUEUE_EMPTY
LIST_QUEUE_ELEMENTS
// Testing enqueue after empty
ENQUEUE 35
PEEK_QUEUE
IS_QUEUE_EMPTY
QUEUE_SIZE
LIST_QUEUE_ELEMENTS
DEQUEUE
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Circular Linked List operations - Moderate
// Testing multiple node insertions
INSERT_NODE 100
INSERT_NODE 200
INSERT_NODE 300
ITERATE_LIST
IS_LIST_EMPTY
// Testing search for different nodes
SEARCH_NODE 100
SEARCH_NODE 200
SEARCH_NODE 300
SEARCH_NODE 400
// Testing node deletion
DELETE_NODE 200
ITERATE_LIST
DELETE_NODE 100
ITERATE_LIST
DELETE_NODE 300
IS_LIST_EMPTY
// Testing insertion after empty
INSERT_NODE 500
ITERATE_LIST
FREE_LIST
IS_LIST_EMPTY
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Min Heap operations - Moderate
// Testing multiple element insertions
INSERT_ELEMENT 30 3
INSERT_ELEMENT 20 2
INSERT_ELEMENT 40 4
IS_HEAP_EMPTY
PEEK_HEAP
LIST_HEAP_ELEMENTS
// Testing extract min
EXTRACT_MIN
PEEK_HEAP
LIST_HEAP_ELEMENTS
// Testing decrease key
DECREASE_KEY 1 1
PEEK_HEAP
LIST_HEAP_ELEMENTS
// Testing remove element
REMOVE_ELEMENT 0
PEEK_HEAP
LIST_HEAP_ELEMENTS
EXTRACT_MIN
IS_HEAP_EMPTY
LIST_HEAP_ELEMENTS
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++